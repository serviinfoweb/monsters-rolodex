{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","components/title-app/title-app.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","TitleApp","App","e","setState","searchField","target","value","state","bind","fetch","then","response","json","users","this","filterMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mWAIaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA2BH,EAAMI,QAAQC,GAAzC,6BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCHbC,EAAW,SAAAR,GACpB,OACA,qBAAKC,UAAU,YAAf,SAGUD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACxB,cAAC,EAAD,CAAuBA,QAAUA,GAAtBA,EAAQC,UCPrBM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACtB,uBACAZ,UAAU,SACVa,KAAK,SACCF,YAAaA,EACbG,SAAUF,MCLPG,G,MAAW,SAAAhB,GAAK,OAEzB,oBAAIC,UAAU,YAAd,+BCyCWgB,E,kDArCb,aAAc,IAAD,8BACX,gBAeFJ,aAAe,SAAAK,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAdtC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAGf,EAAKP,aAAe,EAAKA,aAAaW,KAAlB,gBART,E,qDAUb,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAACV,SAASoB,S,oBAOzC,WAAS,IAAD,EAC2BC,KAAKP,MAA9Bd,EADF,EACEA,SAASW,EADX,EACWA,YACXW,EAAiBtB,EAASuB,QAAQ,SAAA5B,GAAO,OAAIA,EAAQE,KAAK2B,cAAcC,SAASd,EAAYe,wBACnG,OACI,sBAAKlC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CACEW,YAAY,iBACZC,aAAeiB,KAAKjB,eAGtB,cAAC,EAAD,CAAUJ,SAAUsB,W,GAjCZK,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cac86c95.chunk.js","sourcesContent":["import React from 'react';\n\nimport './card.style.css';\n\nexport const Card = props => (\n    <div className='card-container'> \n        <img alt=\"monster\" src={`https://robohash.org/${ props.monster.id} ?set=set2&size=180x180`}/>\n        <h2>{props.monster.name}</h2>\n        <p>{props.monster.email}</p>\n    </div>\n)","import React from 'react';\n\nimport './card-list.style.css'\nimport {Card} from '../card/card.component'\n\nexport const CardList = props =>{\n    return (\n    <div className='card-list' > \n        \n        {\n              props.monsters.map(monster=>( \n                <Card key={monster.id} monster= {monster} />)\n              )\n        }\n    </div>\n    );\n}","import React from 'react';\n\nimport './search-box.style.css';\n\n export const SearchBox = ({ placeholder, handleChange}) =>(\n    <input \n    className='search'\n    type='search' \n          placeholder={placeholder} \n          onChange={handleChange}\n          />\n\n )","import React from 'react';\n\nimport './title-app.style.css';\n\nexport const TitleApp = props =>(\n\n    <h1 className='title-app'>Monster Rolodex</h1>\n)\n\n","import './App.css';\nimport { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport { TitleApp } from './components/title-app/title-app.component';\n//import { render } from '@testing-library/react';\n\n\nclass App extends Component {\n\n  constructor(){\n    super();\n\n    this.state = {\n      monsters :[],\n      searchField :''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters:users}));\n  }\n\n  handleChange = e => {\n    this.setState({ searchField: e.target.value});\n  }\n\n  render(){\n    const { monsters,searchField } = this.state;\n    const filterMonsters = monsters.filter( monster => monster.name.toLowerCase().includes(searchField.toLocaleLowerCase()));\n    return (\n        <div className=\"App\">\n          <TitleApp />\n          <SearchBox \n            placeholder='Search Monster'\n            handleChange ={this.handleChange}\n          />\n          \n          <CardList monsters={filterMonsters} />\n        </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}